////
////
//// This file is generated by the Pulse2Rust tool
////
////

pub type alg_t = super::spec_hash_definitions::hash_alg;
pub fn digest_len(a: super::hacl::alg_t) -> usize {
    super::fstar_sizet::uint32_to_sizet(super::evercrypt_hash_incremental::hash_len(a))
}
pub type hashable_len = usize;
pub type signable_len = usize;
pub type hkdf_lbl_len = usize;
pub type hkdf_ikm_len = usize;
pub fn hacl_hash0(
    alg: super::hacl::alg_t,
    src_len: super::hacl::hashable_len,
    src: &mut [u8],
    dst: &mut [u8],
    psrc: (),
    src_seq: (),
    dst_seq: (),
) -> () {
    super::evercrypt_autoconfig2::init(());
    super::evercrypt_hash_incremental::hash(
        alg,
        dst,
        src,
        (),
        (),
        super::fstar_sizet::sizet_to_uint32(src_len),
    );
}
pub static hacl_hash: fn(
    super::hacl::alg_t,
    super::hacl::hashable_len,
    &mut [u8],
    &mut [u8],
    (),
    (),
    (),
) -> () = super::hacl::hacl_hash0;
pub fn hacl_hmac0(
    alg: super::hacl::alg_t,
    dst: &mut [u8],
    key: &mut [u8],
    key_len: super::hacl::hashable_len,
    msg: &mut [u8],
    msg_len: super::hacl::hashable_len,
    pkey: (),
    pmsg: (),
    dst_seq: (),
    key_seq: (),
    msg_seq: (),
) -> () {
    super::evercrypt_hmac::compute(
        alg,
        dst,
        key,
        (),
        (),
        super::fstar_sizet::sizet_to_uint32(key_len),
        msg,
        (),
        (),
        super::fstar_sizet::sizet_to_uint32(msg_len),
    );
}
pub static hacl_hmac: fn(
    super::hacl::alg_t,
    &mut [u8],
    &mut [u8],
    super::hacl::hashable_len,
    &mut [u8],
    super::hacl::hashable_len,
    (),
    (),
    (),
    (),
    (),
) -> () = super::hacl::hacl_hmac0;
pub fn ed25519_verify0(
    pubk: &mut [u8],
    hdr: &mut [u8],
    hdr_len: super::hacl::signable_len,
    sig: &mut [u8],
    ppubk: (),
    phdr: (),
    psig: (),
    pubk_seq: (),
    hdr_seq: (),
    sig_seq: (),
) -> bool {
    super::evercrypt_ed25519::verify(
        (),
        (),
        pubk,
        super::fstar_sizet::sizet_to_uint32(hdr_len),
        (),
        (),
        hdr,
        (),
        (),
        sig,
    )
}
pub static ed25519_verify: fn(
    &mut [u8],
    &mut [u8],
    super::hacl::signable_len,
    &mut [u8],
    (),
    (),
    (),
    (),
    (),
    (),
) -> bool = super::hacl::ed25519_verify0;
pub fn ed25519_sign0(
    buf: &mut [u8],
    privk: &mut [u8],
    len: usize,
    msg: &mut [u8],
    pprivk: (),
    pmsg: (),
    buf0: (),
    privk_seq: (),
    msg_seq: (),
) -> () {
    super::evercrypt_ed25519::sign(
        buf,
        (),
        (),
        privk,
        super::fstar_sizet::sizet_to_uint32(len),
        (),
        (),
        msg,
    );
}
pub static ed25519_sign: fn(
    &mut [u8],
    &mut [u8],
    usize,
    &mut [u8],
    (),
    (),
    (),
    (),
    (),
) -> () = super::hacl::ed25519_sign0;
pub fn dice_hash_alg1(uu___: ()) -> super::hacl::alg_t {
    panic!()
}
pub fn dice_hash_alg0(uu___: ()) -> super::hacl::alg_t {
    super::hacl::dice_hash_alg1(())
}

