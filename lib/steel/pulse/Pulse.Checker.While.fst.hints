[
  "¸Ü%Æsñ!ž\u0010\u0013­w“Vû\u0007",
  [
    [
      "Pulse.Checker.While.while_cond_comp_typing",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "constructor_distinct_Pulse.Syntax.Base.C_ST",
        "disc_equation_Pulse.Syntax.Base.C_Tot",
        "equation_Pulse.Typing.comp_while_cond",
        "fuel_guarded_inversion_Pulse.Syntax.Base.ppname",
        "projection_inverse_BoxBool_proj_0"
      ],
      0,
      "d74a989ffbe029c7fa49f867c6fcbba6"
    ],
    [
      "Pulse.Checker.While.while_body_comp_typing",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "constructor_distinct_Pulse.Syntax.Base.C_ST",
        "disc_equation_Pulse.Syntax.Base.C_Tot",
        "equation_Pulse.Typing.comp_while_body",
        "fuel_guarded_inversion_Pulse.Syntax.Base.ppname",
        "projection_inverse_BoxBool_proj_0"
      ],
      0,
      "904dace56928de7df0a5215171658ca7"
    ],
    [
      "Pulse.Checker.While.check_while",
      1,
      2,
      2,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Pulse.Elaborate.Pure.elab_term.fuel_instrumented",
        "@fuel_irrelevance_Pulse.Elaborate.Pure.elab_term.fuel_instrumented",
        "@query", "Prims_pretyping_ce036b6b736ef4e0bc3a9ff132a12aed",
        "Pulse.Syntax.Base_pretyping_01e6cbbfeab3ba416b144f2c9223a2d4",
        "Pulse.Syntax.Base_pretyping_23132a72b4b9dcc36ddc94829774f176",
        "Pulse.Syntax.Base_pretyping_b015b044c5bf00a3dd3df9fa711c87dd",
        "Pulse.Syntax.Base_pretyping_fe09dc1e796799f4bac0760e63f30d40",
        "bool_inversion",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "constructor_distinct_FStar.Tactics.Result.Failed",
        "constructor_distinct_FStar.Tactics.Result.Success",
        "constructor_distinct_Pulse.Syntax.Base.C_ST",
        "constructor_distinct_Pulse.Syntax.Base.Tm_ExistsSL",
        "constructor_distinct_Pulse.Syntax.Base.Tm_VProp",
        "data_elim_FStar.Pervasives.Mkdtuple3",
        "data_elim_FStar.Tactics.Result.Success",
        "data_elim_Prims.Mkdtuple2", "data_elim_Pulse.Syntax.Base.Mkppname",
        "data_elim_Pulse.Syntax.Base.Mkst_term",
        "data_elim_Pulse.Syntax.Base.Mkst_term___Tm_While__payload",
        "data_elim_Pulse.Syntax.Base.Tm_ExistsSL",
        "data_elim_Pulse.Syntax.Base.Tm_While",
        "data_typing_intro_Pulse.Syntax.Base.C_ST@tok",
        "disc_equation_FStar.Pervasives.Inl",
        "disc_equation_FStar.Pervasives.Inr",
        "disc_equation_FStar.Pervasives.Native.None",
        "disc_equation_Pulse.Syntax.Base.C_ST",
        "disc_equation_Pulse.Syntax.Base.C_STAtomic",
        "disc_equation_Pulse.Syntax.Base.C_STGhost",
        "disc_equation_Pulse.Syntax.Base.C_Tot",
        "disc_equation_Pulse.Syntax.Base.Tm_ExistsSL",
        "disc_equation_Pulse.Syntax.Base.Tm_While",
        "equality_tok_FStar.Reflection.V2.Data.Q_Explicit@tok",
        "equation_FStar.Pervasives.Native.fst", "equation_FStar.Range.range",
        "equation_FStar.Reflection.Const.bool_lid",
        "equation_FStar.Reflection.Typing.bool_fv",
        "equation_FStar.Reflection.Typing.fstar_top_env",
        "equation_FStar.Reflection.Typing.pp_name_t",
        "equation_FStar.Reflection.Typing.u_zero",
        "equation_FStar.Reflection.V2.Data.var", "equation_Prims.eqtype",
        "equation_Prims.nat",
        "equation_Pulse.Checker.Common.checker_result_t",
        "equation_Pulse.Checker.Common.post_hint_for_env",
        "equation_Pulse.Checker.Common.post_hint_opt",
        "equation_Pulse.Checker.Framing.frame_for_req_in_ctxt",
        "equation_Pulse.Checker.Pure.push_context",
        "equation_Pulse.Reflection.Util.bool_lid",
        "equation_Pulse.Syntax.Base.as_fv",
        "equation_Pulse.Syntax.Base.comp_pre",
        "equation_Pulse.Syntax.Base.comp_st",
        "equation_Pulse.Syntax.Base.ppname_default",
        "equation_Pulse.Syntax.Base.range",
        "equation_Pulse.Syntax.Base.st_comp_of_comp",
        "equation_Pulse.Syntax.Base.stateful_comp",
        "equation_Pulse.Syntax.Base.tm_exists_sl",
        "equation_Pulse.Syntax.Base.tm_fstar",
        "equation_Pulse.Syntax.Base.typ",
        "equation_Pulse.Syntax.Base.universe",
        "equation_Pulse.Syntax.Base.var", "equation_Pulse.Syntax.Base.vprop",
        "equation_Pulse.Syntax.Naming.open_term_",
        "equation_Pulse.Syntax.Pure.tm_fvar",
        "equation_Pulse.Syntax.Pure.u0", "equation_Pulse.Typing.Env.dom",
        "equation_Pulse.Typing.Env.lookup",
        "equation_Pulse.Typing.Metatheory.fresh_wrt",
        "equation_Pulse.Typing.as_binder",
        "equation_Pulse.Typing.comp_while",
        "equation_Pulse.Typing.comp_while_body",
        "equation_Pulse.Typing.comp_while_cond",
        "equation_Pulse.Typing.named_binder",
        "equation_Pulse.Typing.tm_bool", "equation_Pulse.Typing.tm_unit",
        "equation_with_fuel_Pulse.Elaborate.Pure.elab_term.fuel_instrumented",
        "fuel_guarded_inversion_FStar.Pervasives.Native.option",
        "fuel_guarded_inversion_FStar.Pervasives.dtuple3",
        "fuel_guarded_inversion_FStar.Pervasives.dtuple4",
        "fuel_guarded_inversion_FStar.Pervasives.either",
        "fuel_guarded_inversion_FStar.Tactics.Result.__result",
        "fuel_guarded_inversion_Prims.dtuple2",
        "fuel_guarded_inversion_Pulse.Syntax.Base.binder",
        "fuel_guarded_inversion_Pulse.Syntax.Base.comp",
        "fuel_guarded_inversion_Pulse.Syntax.Base.ppname",
        "fuel_guarded_inversion_Pulse.Syntax.Base.st_term",
        "fuel_guarded_inversion_Pulse.Syntax.Base.st_term___Tm_While__payload",
        "fuel_guarded_inversion_Pulse.Syntax.Base.term",
        "function_token_typing_Prims.__cache_version_number__",
        "function_token_typing_Prims.string", "int_inversion",
        "interpretation_Tm_abs_389299f04f65ac629e4d3fc3983df5c1",
        "interpretation_Tm_abs_41920eaffa3db1fc0c89473f375182b0",
        "interpretation_Tm_abs_d8b925b3b5cad67509b7f378cbee611c",
        "kinding_Pulse.Syntax.Base.term@tok",
        "lemma_FStar.Map.lemma_ContainsDom",
        "lemma_FStar.Sealed.Inhabited.sealed_singleton",
        "lemma_Pulse.Syntax.Base.range_singleton",
        "primitive_Prims.op_BarBar", "primitive_Prims.op_Negation",
        "proj_equation_FStar.Pervasives.Mkdtuple3__2",
        "proj_equation_FStar.Pervasives.Native.Mktuple2__1",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_Prims.Mkdtuple2__1",
        "proj_equation_Pulse.Syntax.Base.Mkbinder_binder_ppname",
        "proj_equation_Pulse.Syntax.Base.Mkbinder_binder_ty",
        "proj_equation_Pulse.Syntax.Base.Mkfv_fv_name",
        "proj_equation_Pulse.Syntax.Base.Mkfv_fv_range",
        "proj_equation_Pulse.Syntax.Base.Mknm_nm_ppname",
        "proj_equation_Pulse.Syntax.Base.Mkppname_name",
        "proj_equation_Pulse.Syntax.Base.Mkppname_range",
        "proj_equation_Pulse.Syntax.Base.Mkst_comp_pre",
        "proj_equation_Pulse.Syntax.Base.Mkst_term___Tm_While__payload_body",
        "proj_equation_Pulse.Syntax.Base.Mkst_term___Tm_While__payload_condition",
        "proj_equation_Pulse.Syntax.Base.Mkst_term___Tm_While__payload_invariant",
        "proj_equation_Pulse.Syntax.Base.Mkst_term_range",
        "proj_equation_Pulse.Syntax.Base.Mkst_term_term",
        "proj_equation_Pulse.Syntax.Base.Mkterm_range",
        "proj_equation_Pulse.Syntax.Base.Mkterm_t",
        "proj_equation_Pulse.Syntax.Base.Tm_ExistsSL_b",
        "proj_equation_Pulse.Syntax.Base.Tm_ExistsSL_body",
        "proj_equation_Pulse.Syntax.Base.Tm_ExistsSL_u",
        "proj_equation_Pulse.Syntax.Base.Tm_While__0",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_FStar.Tactics.Result.Failed_a",
        "projection_inverse_FStar.Tactics.Result.Failed_exn",
        "projection_inverse_FStar.Tactics.Result.Failed_ps",
        "projection_inverse_FStar.Tactics.Result.Success_a",
        "projection_inverse_FStar.Tactics.Result.Success_ps",
        "projection_inverse_FStar.Tactics.Result.Success_v",
        "projection_inverse_Pulse.Syntax.Base.C_ST__0",
        "projection_inverse_Pulse.Syntax.Base.Mkbinder_binder_ppname",
        "projection_inverse_Pulse.Syntax.Base.Mkbinder_binder_ty",
        "projection_inverse_Pulse.Syntax.Base.Mkfv_fv_name",
        "projection_inverse_Pulse.Syntax.Base.Mkfv_fv_range",
        "projection_inverse_Pulse.Syntax.Base.Mknm_nm_ppname",
        "projection_inverse_Pulse.Syntax.Base.Mkppname_name",
        "projection_inverse_Pulse.Syntax.Base.Mkppname_range",
        "projection_inverse_Pulse.Syntax.Base.Mkst_comp_pre",
        "projection_inverse_Pulse.Syntax.Base.Mkterm_range",
        "projection_inverse_Pulse.Syntax.Base.Mkterm_t",
        "projection_inverse_Pulse.Syntax.Base.Tm_ExistsSL_b",
        "projection_inverse_Pulse.Syntax.Base.Tm_ExistsSL_body",
        "projection_inverse_Pulse.Syntax.Base.Tm_ExistsSL_u",
        "refinement_interpretation_Tm_refine_262f039a938fc14ac016e995f8cd074e",
        "refinement_interpretation_Tm_refine_26851533b13187a52e8644f48af2401b",
        "refinement_interpretation_Tm_refine_385f59c31213d29cc308b93df5d99dc9",
        "refinement_interpretation_Tm_refine_414d0a9f578ab0048252f8c8f552b99f",
        "refinement_interpretation_Tm_refine_517420d3c6a53f6706a48ac05e3d1f28",
        "refinement_interpretation_Tm_refine_7840ecffe192c7f29cee3cdbc58f9955",
        "refinement_interpretation_Tm_refine_78cf9fabb706bab7e54de904b7db9d2a",
        "refinement_interpretation_Tm_refine_7f3ad0958305f2921bfac06f466396ae",
        "refinement_interpretation_Tm_refine_8c22aa61a47c16d0229ef090894097c8",
        "refinement_interpretation_Tm_refine_90ce0ba3b4c748e30ed3ab112dfb330d",
        "refinement_interpretation_Tm_refine_c3121dff2be0baf0cc495e723dd1ef04",
        "refinement_interpretation_Tm_refine_df4c639aa9a827ee3d5d909cba8bbb01",
        "refinement_interpretation_Tm_refine_eed994d15518279ab75d745192d0d368",
        "refinement_interpretation_Tm_refine_f0ac051651fa0e095f1b2c1241fd6a3f",
        "refinement_interpretation_Tm_refine_f3069ea8bbabfc59ddfb39ae0e00ff7e",
        "refinement_interpretation_Tm_refine_f39ae41739caa6a3420811af45940127",
        "refinement_interpretation_Tm_refine_f8c625e81829d2a557700955f3f0ee4d",
        "string_typing",
        "token_correspondence_Pulse.Elaborate.Pure.elab_term.fuel_instrumented",
        "typing_FStar.Reflection.Typing.u_zero",
        "typing_FStar.Reflection.V2.Data.var", "typing_FStar.Set.mem",
        "typing_Pulse.Checker.Pure.push_context",
        "typing_Pulse.Elaborate.Pure.elab_term",
        "typing_Pulse.Reflection.Util.mk_abs_with_name_and_range",
        "typing_Pulse.Reflection.Util.mk_exists",
        "typing_Pulse.RuntimeUtils.set_range",
        "typing_Pulse.RuntimeUtils.union_ranges",
        "typing_Pulse.Syntax.Base.__proj__Mkbinder__item__binder_ppname",
        "typing_Pulse.Syntax.Base.__proj__Mkbinder__item__binder_ty",
        "typing_Pulse.Syntax.Base.__proj__Mkppname__item__name",
        "typing_Pulse.Syntax.Base.__proj__Mkppname__item__range",
        "typing_Pulse.Syntax.Base.__proj__Mkst_term___Tm_While__payload__item__invariant",
        "typing_Pulse.Syntax.Base.__proj__Mkst_term__item__range",
        "typing_Pulse.Syntax.Base.__proj__Mkst_term__item__term",
        "typing_Pulse.Syntax.Base.__proj__Mkterm__item__range",
        "typing_Pulse.Syntax.Base.__proj__Mkterm__item__t",
        "typing_Pulse.Syntax.Base.__proj__Tm_While__item___0",
        "typing_Pulse.Syntax.Base.eq_comp", "typing_Pulse.Syntax.Base.eq_tm",
        "typing_Pulse.Syntax.Base.eq_univ",
        "typing_Pulse.Syntax.Base.ppname_default",
        "typing_Pulse.Syntax.Base.stateful_comp",
        "typing_Pulse.Syntax.Base.term_range",
        "typing_Pulse.Syntax.Base.tm_exists_sl",
        "typing_Pulse.Typing.Env.as_map", "typing_Pulse.Typing.Env.dom",
        "typing_Pulse.Typing.Env.fstar_env",
        "typing_Pulse.Typing.Env.push_context",
        "typing_Pulse.Typing.Metatheory.st_comp_typing_inversion",
        "typing_Pulse.Typing.as_binder",
        "typing_Pulse.Typing.comp_while_cond", "typing_Pulse.Typing.tm_bool",
        "typing_tok_FStar.Reflection.V2.Data.Q_Explicit@tok"
      ],
      0,
      "171f75da746be70e28af7805d0bdf96d"
    ]
  ]
]