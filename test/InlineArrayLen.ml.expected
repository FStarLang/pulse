open Prims
let rec (basic : unit -> FStar_Int32.t) =
  fun uu___ ->
    let arr =
      Pulse_Lib_HigherArray_Core.mask_alloc () (Stdint.Int32.of_int (123))
        (Stdint.Uint64.of_int (2)) in
    Pulse_Lib_HigherArray_Core.mask_read arr Stdint.Uint64.zero () () ()
let rec (use : unit -> FStar_Int32.t) =
  fun uu___ ->
    let arr =
      Pulse_Lib_HigherArray_Core.mask_alloc () (Stdint.Int32.of_int (123))
        (Stdint.Uint64.of_int (2)) in
    Pulse_Lib_HigherArray_Core.mask_read arr Stdint.Uint64.zero () () ()
let rec (use_gen_init : unit -> FStar_Int32.t) =
  fun uu___ ->
    let arr =
      Pulse_Lib_HigherArray_Core.mask_alloc () (Stdint.Int32.of_int (123))
        (Stdint.Uint64.of_int (2)) in
    Pulse_Lib_HigherArray_Core.mask_read arr Stdint.Uint64.zero () () ()
let rec (use_gen_init_st : unit -> FStar_Int32.t) =
  fun uu___ ->
    let init uu___1 = fun uu___2 -> (Stdint.Int32.of_int (123)) in
    let __anf0 = init () () in
    let arr =
      Pulse_Lib_HigherArray_Core.mask_alloc () __anf0
        (Stdint.Uint64.of_int (2)) in
    Pulse_Lib_HigherArray_Core.mask_read arr Stdint.Uint64.zero () () ()
let rec (use_gen_len : unit -> FStar_Int32.t) =
  fun uu___ ->
    let arr =
      Pulse_Lib_HigherArray_Core.mask_alloc () (Stdint.Int32.of_int (123))
        (Stdint.Uint64.of_int (2)) in
    Pulse_Lib_HigherArray_Core.mask_read arr Stdint.Uint64.zero () () ()
let rec (use_gen_len_st : unit -> FStar_Int32.t) =
  fun uu___ ->
    let len uu___1 = fun uu___2 -> (Stdint.Uint64.of_int (42)) in
    let __anf0 = len () () in
    let arr =
      Pulse_Lib_HigherArray_Core.mask_alloc () (Stdint.Int32.of_int (123))
        __anf0 in
    Pulse_Lib_HigherArray_Core.mask_read arr Stdint.Uint64.zero () () ()
